// CVS-REV:gnome-xml/include/libxml/globals.h:1.12:
{
  ------------------------------------------------------------------------------
  Translated into pascal with help of h2pas utility from the FreePascal project.
  Petr Kozelka <pkozelka@email.cz>
  ------------------------------------------------------------------------------
}
(*
 * globals.h: interface for all global variables of the library
 *
 * The bottom of this file is automatically generated by build_glob.py
 * based on the description file global.data
 *
 * See Copyright for the status of this software.
 *
 * Gary Pennington <Gary.Pennington@uk.sun.com>
 * daniel@veillard.com
 *)

procedure xmlInitGlobals; cdecl; external LIBXML2_SO;
procedure xmlCleanupGlobals; cdecl; external LIBXML2_SO;
(*
 * Externally global symbols which need to be protected for backwards
 * compatibility support.
 *)

type
  xmlRegisterNodeFunc = procedure (node: xmlNodePtr); cdecl;
  xmlDeregisterNodeFunc = procedure (node: xmlNodePtr); cdecl;

  xmlGlobalStatePtr = ^xmlGlobalState;
  xmlGlobalState = record
    xmlParserVersion: ^Char;
    xmlDefaultSAXLocator: xmlSAXLocator;
    xmlDefaultSAXHandler: xmlSAXHandler;
    docbDefaultSAXHandler: xmlSAXHandler;
    htmlDefaultSAXHandler: xmlSAXHandler;
    xmlFree: xmlFreeFunc;
    xmlMalloc: xmlMallocFunc;
    xmlMemStrdup: xmlStrdupFunc;
    xmlRealloc: xmlReallocFunc;
    xmlGenericError: xmlGenericErrorFunc;
    xmlGenericErrorContext: Pointer;
    oldXMLWDcompatibility: Longint;
    xmlBufferAllocScheme: xmlBufferAllocationScheme;
    xmlDefaultBufferSize: Longint;
    xmlSubstituteEntitiesDefaultValue: Longint;
    xmlDoValidityCheckingDefaultValue: Longint;
    xmlGetWarningsDefaultValue: Longint;
    xmlKeepBlanksDefaultValue: Longint;
    xmlLineNumbersDefaultValue: Longint;
    xmlLoadExtDtdDefaultValue: Longint;
    xmlParserDebugEntities: Longint;
    xmlPedanticParserDefaultValue: Longint;
    xmlSaveNoEmptyTags: Longint;
    xmlIndentTreeOutput: Longint;
    xmlTreeIndentString: PChar;
    xmlRegisterNodeDefaultValue: xmlRegisterNodeFunc;
    xmlDeregisterNodeDefaultValue: xmlDeregisterNodeFunc;
    xmlMallocAtomic: xmlMallocFunc;
  end;

procedure xmlInitializeGlobalState(gs: xmlGlobalStatePtr); cdecl; external LIBXML2_SO;
function xmlRegisterNodeDefault(func: xmlRegisterNodeFunc): xmlRegisterNodeFunc; cdecl; external LIBXML2_SO;
function xmlDeregisterNodeDefault(func: xmlDeregisterNodeFunc): xmlDeregisterNodeFunc; cdecl; external LIBXML2_SO;

(*
 * In general the memory allocation entry points are not kept
 * thread specific but this can be overridden by LIBXML_THREAD_ALLOC_ENABLED
 *    - xmlMalloc
 *    - xmlRealloc
 *    - xmlMemStrdup
 *    - xmlFree
 *)
{$IFDEF LIBXML_THREAD_ALLOC_ENABLED}

{$IFDEF LIBXML_THREAD_ENABLED}
//[pk] function __xmlMalloc:^xmlMallocFunc;cdecl;external LIBXML2_SO;
//// extern xmlMallocFunc *__xmlMalloc(void);
//// #define xmlMalloc ( *(__xmlMalloc()))
{$ELSE}
//// LIBXML_DLL_IMPORT extern xmlMallocFunc xmlMalloc;
{$ENDIF}

{$IFDEF LIBXML_THREAD_ENABLED}
//[pk] function __xmlMallocAtomic:^xmlMallocFunc; cdecl; external LIBXML2_SO;
//// extern xmlMallocFunc *__xmlMallocAtomic(void);
//// #define xmlMallocAtomic ( *(__xmlMallocAtomic()))
{$ELSE}
//// LIBXML_DLL_IMPORT extern xmlMallocFunc xmlMallocAtomic;
{$ENDIF}

{$IFDEF LIBXML_THREAD_ENABLED}
//[pk] function __xmlRealloc:^xmlReallocFunc;cdecl;external LIBXML2_SO;
//// extern xmlReallocFunc *__xmlRealloc(void);
//// #define xmlRealloc ( *(__xmlRealloc()))
{$ELSE}
LIBXML_DLL_IMPORT extern xmlReallocFunc xmlRealloc;
{$ENDIF}

{$IFDEF LIBXML_THREAD_ENABLED}
//[pk] function __xmlFree:^xmlFreeFunc;cdecl;external LIBXML2_SO;
//// extern xmlFreeFunc *__xmlFree(void);
//// #define xmlFree ( *(__xmlFree()))
{$ELSE}
//// LIBXML_DLL_IMPORT extern xmlFreeFunc xmlFree;
{$ENDIF}

{$IFDEF LIBXML_THREAD_ENABLED}
//[pk] function __xmlMemStrdup:^xmlStrdupFunc;cdecl;external LIBXML2_SO;
//// extern xmlStrdupFunc *__xmlMemStrdup(void);
//// #define xmlMemStrdup ( *(__xmlMemStrdup()))
{$ELSE}
//// LIBXML_DLL_IMPORT extern xmlStrdupFunc xmlMemStrdup;
{$ENDIF}

{$ELSE}
    { !LIBXML_THREAD_ALLOC_ENABLED  }
//// LIBXML_DLL_IMPORT extern xmlMallocFunc xmlMalloc;
//// LIBXML_DLL_IMPORT extern xmlReallocFunc xmlRealloc;
//// LIBXML_DLL_IMPORT extern xmlFreeFunc xmlFree;
//// LIBXML_DLL_IMPORT extern xmlStrdupFunc xmlMemStrdup;
{$ENDIF}
    { LIBXML_THREAD_ALLOC_ENABLED  }

{$IFDEF LIBXML_THREAD_ENABLED}

//[pk] function __docbDefaultSAXHandler:^xmlSAXHandler;cdecl;external LIBXML2_SO;
(* error
#define docbDefaultSAXHandler \
in define line 150 *)
(* error
( *(__docbDefaultSAXHandler()))
{$else}
in declaration at line 153 *)
{$ENDIF}
{$IFDEF LIBXML_THREAD_ENABLED}

//[pk] function __htmlDefaultSAXHandler:^xmlSAXHandler;cdecl;external LIBXML2_SO;
(* error
#define htmlDefaultSAXHandler \
in define line 158 *)
(* error
( *(__htmlDefaultSAXHandler()))
{$else}
in declaration at line 161 *)
{$ENDIF}
{$IFDEF LIBXML_THREAD_ENABLED}

(*
 * Everything starting from the line below is
 * Automatically generated by build_glob.py.
 * Do not modify the previous line.
 *)

//[pk] function __oldXMLWDcompatibility:^Longint;cdecl;external LIBXML2_SO;
(* error
#define oldXMLWDcompatibility \
in define line 166 *)
(* error
( *(__oldXMLWDcompatibility()))
{$else}
in declaration at line 169 *)
{$ENDIF}
{$IFDEF LIBXML_THREAD_ENABLED}

//[pk] function __xmlBufferAllocScheme:^xmlBufferAllocationScheme;cdecl;external LIBXML2_SO;
(* error
#define xmlBufferAllocScheme \
in define line 174 *)
(* error
( *(__xmlBufferAllocScheme()))
{$else}
in declaration at line 177 *)
{$ENDIF}
{$IFDEF LIBXML_THREAD_ENABLED}

//[pk] function __xmlDefaultBufferSize:^Longint;cdecl;external LIBXML2_SO;
(* error
#define xmlDefaultBufferSize \
in define line 182 *)
(* error
( *(__xmlDefaultBufferSize()))
{$else}
in declaration at line 185 *)
{$ENDIF}
{$IFDEF LIBXML_THREAD_ENABLED}

//[pk] function __xmlDefaultSAXHandler:^xmlSAXHandler;cdecl;external LIBXML2_SO;
(* error
#define xmlDefaultSAXHandler \
in define line 190 *)
(* error
( *(__xmlDefaultSAXHandler()))
{$else}
in declaration at line 193 *)
{$ENDIF}
{$IFDEF LIBXML_THREAD_ENABLED}

//[pk] function __xmlDefaultSAXLocator:^xmlSAXLocator;cdecl;external LIBXML2_SO;
(* error
#define xmlDefaultSAXLocator \
in define line 198 *)
(* error
( *(__xmlDefaultSAXLocator()))
{$else}
in declaration at line 201 *)
{$ENDIF}
{$IFDEF LIBXML_THREAD_ENABLED}

//[pk] function __xmlDoValidityCheckingDefaultValue:^Longint;cdecl;external LIBXML2_SO;
(* error
#define xmlDoValidityCheckingDefaultValue \
in define line 206 *)
(* error
( *(__xmlDoValidityCheckingDefaultValue()))
{$else}
in declaration at line 209 *)
{$ENDIF}
{$IFDEF LIBXML_THREAD_ENABLED}

//[pk] function __xmlGenericError:^xmlGenericErrorFunc;cdecl;external LIBXML2_SO;
(* error
#define xmlGenericError \
in define line 214 *)
(* error
( *(__xmlGenericError()))
{$else}
in declaration at line 217 *)
{$ENDIF}
{$IFDEF LIBXML_THREAD_ENABLED}

//[pk] function __xmlGenericErrorContext:^Pointer;cdecl;external LIBXML2_SO;
(* error
#define xmlGenericErrorContext \
in define line 222 *)
(* error
( *(__xmlGenericErrorContext()))
{$else}
in declaration at line 225 *)
{$ENDIF}
{$IFDEF LIBXML_THREAD_ENABLED}

//[pk] function __xmlGetWarningsDefaultValue:^Longint;cdecl;external LIBXML2_SO;
(* error
#define xmlGetWarningsDefaultValue \
in define line 230 *)
(* error
( *(__xmlGetWarningsDefaultValue()))
{$else}
in declaration at line 233 *)
{$ENDIF}
{$IFDEF LIBXML_THREAD_ENABLED}

//[pk] function __xmlIndentTreeOutput:^Longint;cdecl;external LIBXML2_SO;
(* error
#define xmlIndentTreeOutput \
in define line 238 *)
(* error
( *(__xmlIndentTreeOutput()))
{$else}
in declaration at line 241 *)
{$ENDIF}
{$IFDEF LIBXML_THREAD_ENABLED}

(*
extern const char * *__xmlTreeIndentString(void);
#ifdef LIBXML_THREAD_ENABLED
#define xmlTreeIndentString \
( *(__xmlTreeIndentString()))
#else
LIBXML_DLL_IMPORT extern const char * xmlTreeIndentString;
#endif
*)

//[pk] function __xmlKeepBlanksDefaultValue:^Longint;cdecl;external LIBXML2_SO;
(* error
#define xmlKeepBlanksDefaultValue \
in define line 246 *)
(* error
( *(__xmlKeepBlanksDefaultValue()))
{$else}
in declaration at line 249 *)
{$ENDIF}
{$IFDEF LIBXML_THREAD_ENABLED}

//[pk] function __xmlLineNumbersDefaultValue:^Longint;cdecl;external LIBXML2_SO;
(* error
#define xmlLineNumbersDefaultValue \
in define line 254 *)
(* error
( *(__xmlLineNumbersDefaultValue()))
{$else}
in declaration at line 257 *)
{$ENDIF}
{$IFDEF LIBXML_THREAD_ENABLED}

//[pk] function __xmlLoadExtDtdDefaultValue:^Longint;cdecl;external LIBXML2_SO;
(* error
#define xmlLoadExtDtdDefaultValue \
in define line 262 *)
(* error
( *(__xmlLoadExtDtdDefaultValue()))
{$else}
in declaration at line 265 *)
{$ENDIF}
{$IFDEF LIBXML_THREAD_ENABLED}

//[pk] function __xmlParserDebugEntities:^Longint;cdecl;external LIBXML2_SO;
(* error
#define xmlParserDebugEntities \
in define line 270 *)
(* error
( *(__xmlParserDebugEntities()))
{$else}
in declaration at line 273 *)
{$ENDIF}
{$IFDEF LIBXML_THREAD_ENABLED}

//[pk] function __xmlParserVersion:^^Char; cdecl; external LIBXML2_SO;
(* error
#define xmlParserVersion \
in define line 278 *)
(* error
( *(__xmlParserVersion()))
{$else}
in declaration at line 281 *)
{$ENDIF}
{$IFDEF LIBXML_THREAD_ENABLED}

//[pk] function __xmlPedanticParserDefaultValue:^Longint;cdecl;external LIBXML2_SO;
(* error
#define xmlPedanticParserDefaultValue \
in define line 286 *)
(* error
( *(__xmlPedanticParserDefaultValue()))
{$else}
in declaration at line 289 *)
{$ENDIF}
{$IFDEF LIBXML_THREAD_ENABLED}

//[pk] function __xmlSaveNoEmptyTags:^Longint;cdecl;external LIBXML2_SO;
(* error
#define xmlSaveNoEmptyTags \
in define line 294 *)
(* error
( *(__xmlSaveNoEmptyTags()))
{$else}
in declaration at line 297 *)
{$ENDIF}
{$IFDEF LIBXML_THREAD_ENABLED}

//[pk] function __xmlSubstituteEntitiesDefaultValue:^Longint;cdecl;external LIBXML2_SO;
(* error
#define xmlSubstituteEntitiesDefaultValue \
in define line 302 *)
(* error
( *(__xmlSubstituteEntitiesDefaultValue()))
{$else}
in declaration at line 305 *)
{$ENDIF}

//[pk] function __xmlRegisterNodeDefaultValue:^xmlRegisterNodeFunc; cdecl; external LIBXML2_SO;
{$IFDEF LIBXML_THREAD_ENABLED}
(* error
#define xmlRegisterNodeDefaultValue \
in define line 345 *)
(* error
(*(__xmlRegisterNodeDefaultValue()))
{$ELSE}
in declaration at line 348 *)
{$ENDIF}

//[pk] function __xmlDeregisterNodeDefaultValue:^xmlDeregisterNodeFunc; cdecl; external LIBXML2_SO;
{$IFDEF LIBXML_THREAD_ENABLED}
(* error
#define xmlDeregisterNodeDefaultValue \
in define line 353 *)
(* error
(*(__xmlDeregisterNodeDefaultValue()))
{$ELSE}
in declaration at line 356 *)
{$ENDIF}
